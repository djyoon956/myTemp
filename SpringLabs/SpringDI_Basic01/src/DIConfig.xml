<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
			xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd">
<!-- 

	Spring 자신만의 [컨테이너 : Spring 전용 메모리 공간] 제공(IOC)
	[객체를 만들고 조립(관계,,,) ] 설정
	
	>> DIConfig.xml 문서를 read 해서 안에 있는 코드를 먼저 실행
	>> xml 파일은 컨테이너를 구성하는 객체를 생성하고 의존을 설정하는 파일
		 또는 Annotation 통해 컨테이너 자원 구성
		 
	 제어의 역전 (프로그램의 제어 구조를 바꾼다.)
	 	:작은 단위의 부품을 만들어 놓고 그것을 조립하는 행위 (레고 블럭 처럼)
	 	
 	JAVA CODE
 	NewRecordView view = new NewRecordView(); // 객체 생성
 	NewRecord record = new NewRecord();
 	
 	view.setRecord(record) // 객체 주입(DI)
 	
 	위 와 같은 형태의 코드를 자바 코드가 아닌 [설정(Annotation or xml)]을 통해서 작업
 	
 -->
  
    <!-- <property name=구현되고 있는 member fieㅣd 이름 >  -->
  	<!-- NewRecord record = new NewRecord() -->
 	<bean id="record" 	class="Spring_DI4.NewRecord"> </bean>
 	
	<!-- NewRecordView view = new NewRecordView() -->
 	<bean id="view"   	class="Spring_DI4.NewRecordView">
	 		<property name="record" ref="record"></property>
 	</bean>
</beans>